{"version":3,"sources":["spinner.js","../src/spinner.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","exports","value","aurelia_framework_1","require","aurelia_pal_1","SpinnerCustomAttribute","element","container","viewEngine","spinnerConfig","spinnerHtml","PLATFORM","moduleName","show","view","block","config","assign","SpinnerCustomAttribute_1","defaultConfig","console","log","blockerClass","spinner","prototype","bind","useBackgroundBlocker","Error","attached","createSpinner","showChanged","showSpinner","classList","add","remove","_this","loadViewFactory","then","factory","childContainer","createChild","create","addElement","removeSpinner","document","querySelectorAll","id","removeChild","divElement","spinnerDivElement","createElement","appendNodesTo","firstElementChild","setElementStyle","insertBefore","firstChild","htmlElement","elementRect","getBoundingClientRect","height","top","window","innerHeight","scrollY","style","position","zIndex","left","bindable","defaultBindingMode","bindingMode","oneWay","oneTime","inject","Element","Container","ViewEngine"],"mappings":"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","file":"spinner.js","sourceRoot":"/source/","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar aurelia_framework_1 = require(\"aurelia-framework\");\nvar aurelia_pal_1 = require(\"aurelia-pal\");\nvar SpinnerCustomAttribute = (function () {\n    function SpinnerCustomAttribute(element, container, viewEngine, spinnerConfig) {\n        this.element = element;\n        this.container = container;\n        this.viewEngine = viewEngine;\n        this.spinnerConfig = spinnerConfig;\n        this.spinnerHtml = aurelia_pal_1.PLATFORM.moduleName('spinner.html');\n        //private _view: string = PLATFORM.moduleName('views/circle.html');\n        this.show = false;\n        this.view = aurelia_pal_1.PLATFORM.moduleName('views/circle.html');\n        this.block = false;\n        this.config = Object.assign({}, SpinnerCustomAttribute_1.defaultConfig);\n        console.log(this.config);\n        console.log(this.config.blockerClass);\n        console.log(this.spinnerConfig);\n        if (this.spinnerConfig.spinner)\n            this.config = Object.assign({}, this.spinnerConfig);\n    }\n    SpinnerCustomAttribute_1 = SpinnerCustomAttribute;\n    SpinnerCustomAttribute.prototype.bind = function () {\n        console.log(\"*******bind**********\");\n        this.view = this.spinnerConfig.spinner || this.view;\n        console.log(this.spinnerConfig.spinner);\n        this.block = this.block || this.config.useBackgroundBlocker;\n        if (!this.view)\n            throw new Error(\"no view has been specified for the spinner\");\n    };\n    SpinnerCustomAttribute.prototype.attached = function () {\n        this.createSpinner();\n    };\n    SpinnerCustomAttribute.prototype.showChanged = function (showSpinner) {\n        if (!this.target && !this.block)\n            return;\n        showSpinner ? this.target.classList.add(this.config.blockerClass) :\n            this.target.classList.remove(this.config.blockerClass);\n    };\n    // viewChanged(newValue: string) {\n    //   if(!newValue) this._view = this.config.view;\n    //   console.log(this.view);\n    //   console.log(spinnerView[newValue]);\n    //   console.log(newValue);\n    //   this._view = spinnerView[newValue];\n    // }\n    SpinnerCustomAttribute.prototype.createSpinner = function () {\n        var _this = this;\n        console.log(\"createSpinner \");\n        this.viewEngine.loadViewFactory(this.spinnerHtml).then(function (factory) {\n            var childContainer = _this.container.createChild();\n            var view = factory.create(childContainer);\n            view.bind(_this);\n            _this.addElement(view);\n        });\n    };\n    SpinnerCustomAttribute.prototype.removeSpinner = function () {\n        var removeSpinner = document.querySelectorAll(\"#\" + this.element.id)[0];\n        removeSpinner.removeChild(this.divElement);\n    };\n    SpinnerCustomAttribute.prototype.addElement = function (view) {\n        console.log(view);\n        var container = document.querySelectorAll(\"#\" + this.element.id)[0];\n        var spinnerDivElement = document.createElement('div');\n        view.appendNodesTo(spinnerDivElement);\n        this.target = this.element.firstElementChild || this.element;\n        this.divElement = this.setElementStyle(this.element, spinnerDivElement);\n        if (this.block)\n            this.target.classList.add(this.config.blockerClass);\n        container.insertBefore(this.divElement, container.firstChild);\n    };\n    // todo fix too recalculate element height\n    SpinnerCustomAttribute.prototype.setElementStyle = function (element, htmlElement) {\n        var elementRect = element.getBoundingClientRect();\n        var height = htmlElement.getBoundingClientRect().height;\n        var top = elementRect.top + elementRect.height;\n        top = ((top + height) < window.innerHeight) ? top + window.scrollY : (elementRect.top - height + window.scrollY);\n        htmlElement.style.position = 'absolute';\n        htmlElement.style.zIndex = '999';\n        htmlElement.style.height = \"calc(100% - \" + top + \"px)\";\n        htmlElement.style.top = top + \"px\";\n        htmlElement.style.left = \"calc(50% - 35px)\";\n        return htmlElement;\n    };\n    SpinnerCustomAttribute.defaultConfig = {\n        spinner: '',\n        useBackgroundBlocker: false,\n        blockerClass: 'spinner-blocker'\n    };\n    __decorate([\n        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneWay })\n    ], SpinnerCustomAttribute.prototype, \"show\", void 0);\n    __decorate([\n        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneTime })\n    ], SpinnerCustomAttribute.prototype, \"view\", void 0);\n    __decorate([\n        aurelia_framework_1.bindable({ defaultBindingMode: aurelia_framework_1.bindingMode.oneTime })\n    ], SpinnerCustomAttribute.prototype, \"block\", void 0);\n    SpinnerCustomAttribute = SpinnerCustomAttribute_1 = __decorate([\n        aurelia_framework_1.inject(Element, aurelia_framework_1.Container, aurelia_framework_1.ViewEngine, 'spinner-config')\n    ], SpinnerCustomAttribute);\n    return SpinnerCustomAttribute;\n    var SpinnerCustomAttribute_1;\n}());\nexports.SpinnerCustomAttribute = SpinnerCustomAttribute;\n","import { inject, bindable, bindingMode, Container, View, ViewEngine } from 'aurelia-framework';\r\nimport { PLATFORM } from 'aurelia-pal';\r\n\r\nimport { SpinnerConfig } from \"./spinner-config\";\r\n\r\n@inject(Element, Container, ViewEngine, 'spinner-config')\r\nexport class SpinnerCustomAttribute {\r\n  private divElement: HTMLElement;\r\n  private target: Element;\r\n  private readonly spinnerHtml: string = PLATFORM.moduleName('spinner.html');\r\n  private config: SpinnerConfig;\r\n  //private _view: string = PLATFORM.moduleName('views/circle.html');\r\n\r\n  @bindable({ defaultBindingMode: bindingMode.oneWay }) show: boolean = false;\r\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) view: string = PLATFORM.moduleName('views/circle.html')\r\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) block: boolean = false;\r\n\r\n  static defaultConfig: SpinnerConfig = {\r\n    spinner: '',\r\n    useBackgroundBlocker: false,\r\n    blockerClass: 'spinner-blocker'\r\n  };\r\n\r\n  constructor(private element,\r\n    private container,\r\n    private viewEngine,\r\n    private spinnerConfig\r\n  ) {\r\n    this.config = Object.assign({}, SpinnerCustomAttribute.defaultConfig);\r\n    console.log(this.config);\r\n    console.log(this.config.blockerClass);\r\n    console.log(this.spinnerConfig);\r\n    if(this.spinnerConfig.spinner)\r\n      this.config = Object.assign({}, this.spinnerConfig);\r\n  }\r\n\r\n  bind() {\r\n    console.log(\"*******bind**********\");\r\n    this.view = this.spinnerConfig.spinner || this.view;\r\n    console.log(this.spinnerConfig.spinner);\r\n    this.block = this.block || this.config.useBackgroundBlocker;\r\n\r\n    if (!this.view) throw new Error(\"no view has been specified for the spinner\");\r\n  }\r\n\r\n  attached() {\r\n    this.createSpinner();\r\n  }\r\n\r\n  showChanged(showSpinner: boolean) {\r\n    if (!this.target && !this.block) return;\r\n\r\n    showSpinner ? this.target.classList.add(this.config.blockerClass) :\r\n      this.target.classList.remove(this.config.blockerClass);\r\n  }\r\n\r\n  // viewChanged(newValue: string) {\r\n  //   if(!newValue) this._view = this.config.view;\r\n\r\n  //   console.log(this.view);\r\n  //   console.log(spinnerView[newValue]);\r\n  //   console.log(newValue);\r\n\r\n  //   this._view = spinnerView[newValue];\r\n  // }\r\n\r\n  private createSpinner(): void {\r\n    console.log(\"createSpinner \");\r\n\r\n    this.viewEngine.loadViewFactory(this.spinnerHtml).then(factory => {\r\n      const childContainer = this.container.createChild();\r\n      const view = factory.create(childContainer);\r\n      view.bind(this);\r\n\r\n      this.addElement(view);\r\n    });\r\n  }\r\n\r\n  private removeSpinner(): void {\r\n    const removeSpinner = document.querySelectorAll(`#${this.element.id}`)[0];\r\n    removeSpinner.removeChild(this.divElement);\r\n  }\r\n\r\n  private addElement(view: View): void {\r\n    console.log(view);\r\n    const container = document.querySelectorAll(`#${this.element.id}`)[0];\r\n\r\n    const spinnerDivElement = <HTMLElement>document.createElement('div');\r\n    view.appendNodesTo(spinnerDivElement);\r\n\r\n    this.target = this.element.firstElementChild || this.element;\r\n\r\n    this.divElement = this.setElementStyle(this.element, spinnerDivElement);\r\n\r\n    if (this.block) this.target.classList.add(this.config.blockerClass);\r\n\r\n    container.insertBefore(this.divElement, container.firstChild);\r\n  }\r\n\r\n  // todo fix too recalculate element height\r\n  private setElementStyle(element: Element, htmlElement: HTMLElement): HTMLElement {\r\n    const elementRect = element.getBoundingClientRect();\r\n    const height = htmlElement.getBoundingClientRect().height;\r\n    let top = elementRect.top + elementRect.height;\r\n\r\n    top = ((top + height) < window.innerHeight) ? top + window.scrollY : (elementRect.top - height + window.scrollY);\r\n\r\n    htmlElement.style.position = 'absolute';\r\n    htmlElement.style.zIndex = '999';\r\n    htmlElement.style.height = `calc(100% - ${top}px)`;\r\n    htmlElement.style.top = `${top}px`;\r\n    htmlElement.style.left = `calc(50% - 35px)`;\r\n\r\n    return htmlElement;\r\n  }\r\n\r\n}\r\n"]}