{"version":3,"sources":["../src/spinner.ts"],"names":[],"mappings":"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","file":"spinner.js","sourcesContent":["import { inject, bindable, bindingMode, Container, View, ViewEngine } from 'aurelia-framework';\r\nimport { PLATFORM } from 'aurelia-pal';\r\n\r\nimport { SpinnerConfig } from \"./spinner-config\";\r\n\r\n@inject(Element, Container, ViewEngine, 'spinner-config')\r\nexport class SpinnerCustomAttribute {\r\n  private divElement: HTMLElement;\r\n  private target: Element;\r\n  private readonly spinnerHtml: string = PLATFORM.moduleName('spinner.html');\r\n  private config: SpinnerConfig;\r\n  //private _view: string = PLATFORM.moduleName('views/circle.html');\r\n\r\n  @bindable({ defaultBindingMode: bindingMode.oneWay }) show: boolean = false;\r\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) view: string = PLATFORM.moduleName('views/circle.html')\r\n  @bindable({ defaultBindingMode: bindingMode.oneTime }) block: boolean = false;\r\n\r\n  static defaultConfig: SpinnerConfig = {\r\n    spinner: '',\r\n    useBackgroundBlocker: false,\r\n    blockerClass: 'spinner-blocker'\r\n  };\r\n\r\n  constructor(private element,\r\n    private container,\r\n    private viewEngine,\r\n    private spinnerConfig\r\n  ) {\r\n    this.config = Object.assign({}, SpinnerCustomAttribute.defaultConfig);\r\n    console.log(this.config);\r\n    console.log(this.config.blockerClass);\r\n    console.log(this.spinnerConfig);\r\n    if(this.spinnerConfig.spinner)\r\n      this.config = Object.assign({}, this.spinnerConfig);\r\n  }\r\n\r\n  bind() {\r\n    console.log(\"*******bind**********\");\r\n    this.view = this.spinnerConfig.spinner || this.view;\r\n    console.log(this.spinnerConfig.spinner);\r\n    this.block = this.block || this.config.useBackgroundBlocker;\r\n\r\n    if (!this.view) throw new Error(\"no view has been specified for the spinner\");\r\n  }\r\n\r\n  attached() {\r\n    this.createSpinner();\r\n  }\r\n\r\n  showChanged(showSpinner: boolean) {\r\n    if (!this.target && !this.block) return;\r\n\r\n    showSpinner ? this.target.classList.add(this.config.blockerClass) :\r\n      this.target.classList.remove(this.config.blockerClass);\r\n  }\r\n\r\n  // viewChanged(newValue: string) {\r\n  //   if(!newValue) this._view = this.config.view;\r\n\r\n  //   console.log(this.view);\r\n  //   console.log(spinnerView[newValue]);\r\n  //   console.log(newValue);\r\n\r\n  //   this._view = spinnerView[newValue];\r\n  // }\r\n\r\n  private createSpinner(): void {\r\n    console.log(\"createSpinner \");\r\n\r\n    this.viewEngine.loadViewFactory(this.spinnerHtml).then(factory => {\r\n      const childContainer = this.container.createChild();\r\n      const view = factory.create(childContainer);\r\n      view.bind(this);\r\n\r\n      this.addElement(view);\r\n    });\r\n  }\r\n\r\n  private removeSpinner(): void {\r\n    const removeSpinner = document.querySelectorAll(`#${this.element.id}`)[0];\r\n    removeSpinner.removeChild(this.divElement);\r\n  }\r\n\r\n  private addElement(view: View): void {\r\n    console.log(view);\r\n    const container = document.querySelectorAll(`#${this.element.id}`)[0];\r\n\r\n    const spinnerDivElement = <HTMLElement>document.createElement('div');\r\n    view.appendNodesTo(spinnerDivElement);\r\n\r\n    this.target = this.element.firstElementChild || this.element;\r\n\r\n    this.divElement = this.setElementStyle(this.element, spinnerDivElement);\r\n\r\n    if (this.block) this.target.classList.add(this.config.blockerClass);\r\n\r\n    container.insertBefore(this.divElement, container.firstChild);\r\n  }\r\n\r\n  // todo fix too recalculate element height\r\n  private setElementStyle(element: Element, htmlElement: HTMLElement): HTMLElement {\r\n    const elementRect = element.getBoundingClientRect();\r\n    const height = htmlElement.getBoundingClientRect().height;\r\n    let top = elementRect.top + elementRect.height;\r\n\r\n    top = ((top + height) < window.innerHeight) ? top + window.scrollY : (elementRect.top - height + window.scrollY);\r\n\r\n    htmlElement.style.position = 'absolute';\r\n    htmlElement.style.zIndex = '999';\r\n    htmlElement.style.height = `calc(100% - ${top}px)`;\r\n    htmlElement.style.top = `${top}px`;\r\n    htmlElement.style.left = `calc(50% - 35px)`;\r\n\r\n    return htmlElement;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}